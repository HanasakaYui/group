<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smart.group.mapper.GroupMapper">
  <resultMap id="BaseResultMap" type="com.smart.group.entity.Group">
    <!--@mbg.generated-->
    <!--@Table t_group-->
    <id column="group_id" jdbcType="BIGINT" property="groupId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="group_type" jdbcType="INTEGER" property="groupType" />
    <result column="attractions" jdbcType="VARCHAR" property="attractions" />
    <result column="route_name" jdbcType="VARCHAR" property="routeName" />
    <result column="stale_date" jdbcType="TIMESTAMP" property="staleDate" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="worker_id" jdbcType="INTEGER" property="workerId" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="click" jdbcType="INTEGER" property="click" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    group_id, `status`, group_type, attractions, route_name, stale_date, price, update_date, 
    worker_id, score, click, create_date, version, is_del
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from t_group
    where group_id = #{groupId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from t_group
    where group_id = #{groupId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="group_id" keyProperty="groupId" parameterType="com.smart.group.entity.Group" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_group (`status`, group_type, attractions, 
      route_name, stale_date, price, 
      update_date, worker_id, score, 
      click, create_date, version, 
      is_del)
    values (#{status,jdbcType=INTEGER}, #{groupType,jdbcType=INTEGER}, #{attractions,jdbcType=VARCHAR}, 
      #{routeName,jdbcType=VARCHAR}, #{staleDate,jdbcType=TIMESTAMP}, #{price,jdbcType=DECIMAL}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{workerId,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}, 
      #{click,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER}, 
      #{isDel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="group_id" keyProperty="groupId" parameterType="com.smart.group.entity.Group" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="status != null">
        `status`,
      </if>
      <if test="groupType != null">
        group_type,
      </if>
      <if test="attractions != null">
        attractions,
      </if>
      <if test="routeName != null">
        route_name,
      </if>
      <if test="staleDate != null">
        stale_date,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="workerId != null">
        worker_id,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="click != null">
        click,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="groupType != null">
        #{groupType,jdbcType=INTEGER},
      </if>
      <if test="attractions != null">
        #{attractions,jdbcType=VARCHAR},
      </if>
      <if test="routeName != null">
        #{routeName,jdbcType=VARCHAR},
      </if>
      <if test="staleDate != null">
        #{staleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="workerId != null">
        #{workerId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="click != null">
        #{click,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.smart.group.entity.Group">
    <!--@mbg.generated-->
    update t_group
    <set>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="groupType != null">
        group_type = #{groupType,jdbcType=INTEGER},
      </if>
      <if test="attractions != null">
        attractions = #{attractions,jdbcType=VARCHAR},
      </if>
      <if test="routeName != null">
        route_name = #{routeName,jdbcType=VARCHAR},
      </if>
      <if test="staleDate != null">
        stale_date = #{staleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="workerId != null">
        worker_id = #{workerId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="click != null">
        click = #{click,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where group_id = #{groupId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smart.group.entity.Group">
    <!--@mbg.generated-->
    update t_group
    set `status` = #{status,jdbcType=INTEGER},
      group_type = #{groupType,jdbcType=INTEGER},
      attractions = #{attractions,jdbcType=VARCHAR},
      route_name = #{routeName,jdbcType=VARCHAR},
      stale_date = #{staleDate,jdbcType=TIMESTAMP},
      price = #{price,jdbcType=DECIMAL},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      worker_id = #{workerId,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      click = #{click,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER},
      is_del = #{isDel,jdbcType=INTEGER}
    where group_id = #{groupId,jdbcType=BIGINT}
  </update>

    <resultMap extends="BaseResultMap" id="CollectionMap" type="com.smart.group.entity.Group">
        <collection property="labelsList" resultMap="com.smart.group.mapper.LabelsMapper.BaseResultMap" />
    </resultMap>

    <select id="selectGroups" resultMap="CollectionMap">
        SELECT g.group_id,
               g.status,
               g.group_type,
               g.attractions,
               g.route_name,
               g.stale_date,
               g.price,
               g.update_date,
               g.worker_id,
               g.score,
               g.click,
               l.label_id,
               l.label_type
        FROM t_group g
                     LEFT JOIN group_labels gl ON g.group_id = gl.group_id
                     LEFT JOIN labels l ON gl.label_id = l.label_id
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="group.status != null">
                and g.status = #{group.status}
            </if>
            <if test="group.groupType != null">
                AND g.group_type = #{group.groupType}
            </if>
            <if test="group.routeName != null">
                <bind name="routeName" value="'%' + group.routeName + '%'" />
                AND g.route_name LIKE #{routeName}
            </if>
        </trim>
        AND g.is_del = 0
    </select>

    <update id="updateGroups">
        UPDATE t_group
        <trim prefix="SET" suffixOverrides=",">
            <if test="code == 1">
                status = 1,
            </if>
            <if test="code == 2">
                status = 2,
            </if>
            <if test="code == 3">
                status = 3,
            </if>
            <if test="code == 4">
                status = 4
            </if>
        </trim>
        WHERE group_id IN
        <foreach close=")" collection="groupIds" item="groupId" open="(" separator=",">
            #{groupId}
        </foreach>
    </update>
</mapper>